0011 0001 0000 0000 ;start x3100

;the ascii digits will be in r0-r4
0101 000 000 1 00000; AND R0 w/0
0101 001 001 1 00000; AND R1 w/0
0101 010 010 1 00000; AND R2 w/0
0101 011 011 1 00000; AND R3 w/0
0101 100 100 1 00000; AND R4 w/0

1010 000 0 0001 1010 ;LDI R0 w/ [x3120] = [[x3000]]
1010 001 0 0001 1010 ;LDI R1 w/ [x3121] = [[x3001]]
1010 010 0 0001 1010 ;LDI R2 w/ [x3122] = [[x3002]]

0101 000 000 1 01111 ;AND R0 w/ 01111 to get 2’s complement
0101 001 001 1 01111 ;AND R1 w/ 01111 to get 2’s complement
0101 010 010 1 01111 ;AND R2 w/ 01111 to get 2’s complement

1011 000 0 0001 0100 ;STI R0 in [x3120] = [[x3000]]
1011 001 0 0001 0100 ;STI R1 in [x3121] = [[x3001]]
1011 010 0 0001 0100 ;STI R2 in [x3122] = [[x3002]]

1110 011 100000100 ;LEA R3 w/x3013
0110 100 011 110000 ;LDR R4= R3 + (-12)
0110 101 011 110001 ;LDR R5 = R3 + (-11)

0101 100 100 1 01111 ;AND R4 w/01111 to get 2’s complement
0101 101 101 1 01111 ;AND R5 w/01111 to get 2’s complement

0111 100 011 110000 ;STR R3+(-12) from R4
0111 101 011 110001 ;STR R3+(-11) from R5

0101 110 110 1 00000 ;AND R6 w/0 to clear register that will contain the sum

0001 110 000 0 00 001 ;R6 = R0 + R1
0001 110 110 0 00 010 ;R6 = R6 + R2
0001 110 110 0 00 100 ;R6 = R6 + R4
0001 110 110 0 00 101 ;R6 = R6 + R5

1011 110 0 0000 0011 ;STI R6 [x311E] = [[x20FF]]
